

services:
  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      # - ORDERER_GENERAL_GENESISMETHOD=file
      # - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer.example.com:9443
      - ORDERER_METRICS_PROVIDER=prometheus
      - FABRIC_LOGGING_SPEC=grpc=debug
    command: orderer
    volumes:
      # - ./config/:/var/hyperledger/configtx
      - ./channel-artifacts/:/var/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/var/hyperledger/orderer
    ports:
      - 7050:7050
      - 7053:7053

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # - FABRIC_CFG_PATH=/etc/hyperledger/fabric   # Path to look for core.yaml
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ENABLED=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_TLS_ENABLED=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      # - ./core/core.yaml:/etc/hyperledger/fabric/core.yaml   # Mapping the core.yaml file into the container
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/msp/peer
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls/
    ports:
      - 7051:7051

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # - FABRIC_CFG_PATH=/etc/hyperledger/fabric   # Path to look for core.yaml
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      # - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ENABLED=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variables
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:9051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_OPERATIONS_LISTENADDRESS=peer0.org2.example.com:9445
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0Org2"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      # - ./core/core.yaml:/etc/hyperledger/fabric/core.yaml   # Mapping the core.yaml file into the container
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/msp/peer
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls/
    ports:
      - 9051:9051

  # peer0.org2.example.com:
  #   container_name: peer0.org2.example.com
  #   image: hyperledger/fabric-peer
  #   environment:
  #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
  #     - CORE_PEER_ID=peer0.org2.example.com
  #     - CORE_LOGGING_PEER=debug
  #     - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
  #     - CORE_PEER_LOCALMSPID=Org2MSP
  #     - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
  #     - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
  #     - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=password
  #     - CORE_PEER_TLS_ENABLED=true
  #     - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
  #     - CORE_PEER_GOSSIP_USELEADERELECTION=true
  #     - CORE_PEER_GOSSIP_ENABLED=true
  #     - CORE_PEER_GOSSIP_ORGLEADER=false
  #     - FABRIC_LOGGING_SPEC=grpc=debug
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  #   command: peer node start
  #   volumes:
  #     - /var/run/:/host/var/run/
  #     - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls/
  #     - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/msp/peer
  #   ports:
  #     - 9051:9051


#  all ca servers

  # ca.org1.example.com:
  #   image: hyperledger/fabric-ca
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
  #     - FABRIC_CA_SERVER_TLS_ENABLED=true
  #     - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
  #     - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk
  #   ports:
  #     - "7054:7054"
  #   command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
  #   volumes:
  #     - ./crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
  
  # ca.org2.example.com:
  #   image: hyperledger/fabric-ca
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca.org2.example.com
  #     - FABRIC_CA_SERVER_TLS_ENABLED=true
  #     - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
  #     - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk
  #   ports:
  #     - "8054:7054"
  #   command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
  #   volumes:
  #     - ./crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
  
  # ca.orderer.example.com:
  #   image: hyperledger/fabric-ca
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca.orderer.example.com
  #     - FABRIC_CA_SERVER_TLS_ENABLED=true
  #     - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.example.com-cert.pem
  #     - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk
  #   ports:
  #     - "9054:7054"
  #   command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
  #   volumes:
  #     - ./crypto-config/ordererOrganizations/example.com/ca:/etc/hyperledger/fabric-ca-server-config

  couchdb:
    container_name: couchdb
    image: couchdb:2.3
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    volumes:
      - ./couchdb/data:/opt/couchdb/data
    ports:
      - 5984:5984